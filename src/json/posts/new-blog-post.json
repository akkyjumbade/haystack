{"title":"New blog post","slug":"new-blog-post","description":"<div class=\"mainheading\"><h1 class=\"posttitle\">Using <code class=\" prettyprinted\" style=\"\"><span class=\"pln\">dangerouslySetInnerHTML</span></code> in a React application</h1>\n<h2 class=\"post-subtitle\"><img src=\"https://blog.logrocket.com/wp-content/uploads/2021/07/using-dangerouslysetinnerHTML-react-application.png\" alt=\"img\" j0hgjn0sh=\"\" width=\"300px\"></h2>\n<p>\n<span class=\"post-date\"><time class=\"post-date\">\nJuly 9, 2021 </time></span>\n\n<span class=\"readingtime\">3 min read</span>\n\n</p>\n</div>\n<p><img src=\"https://blog.logrocket.com/wp-content/uploads/2021/07/using-dangerouslysetinnerHTML-react-application.png\" class=\"featured-image img-fluid wp-post-image jetpack-lazy-image jetpack-lazy-image--handled\" alt=\"Using DangerouslySetInnerHTML In A React Application\" data-attachment-id=\"58021\" data-permalink=\"https://blog.logrocket.com/using-dangerouslysetinnerhtml-in-a-react-application/using-dangerouslysetinnerhtml-react-application/\" data-orig-file=\"https://blog.logrocket.com/wp-content/uploads/2021/07/using-dangerouslysetinnerHTML-react-application.png\" data-orig-size=\"730,487\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"Using dangerouslysetinnerhtml react application\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://blog.logrocket.com/wp-content/uploads/2021/07/using-dangerouslysetinnerHTML-react-application-300x200.png\" data-large-file=\"https://blog.logrocket.com/wp-content/uploads/2021/07/using-dangerouslysetinnerHTML-react-application.png\" srcset=\"https://blog.logrocket.com/wp-content/uploads/2021/07/using-dangerouslysetinnerHTML-react-application.png 730w, https://blog.logrocket.com/wp-content/uploads/2021/07/using-dangerouslysetinnerHTML-react-application-300x200.png 300w\" data-lazy-loaded=\"1\" sizes=\"(max-width: 730px) 100vw, 730px\" loading=\"eager\" j0hgjn0sh=\"\" width=\"730\" height=\"487\"> </p><article class=\"article-post\">\n<p>This article covers the reasoning behind using the <code class=\" prettyprinted\" style=\"\"><span class=\"pln\">dangerouslySetInnerHTML</span></code> property in a React application, which is the equivalent of the <code class=\" prettyprinted\" style=\"\"><span class=\"pln\">innerHTML</span></code> attribute in browser DOM.</p>\n<h2>What is <code class=\" prettyprinted\" style=\"\"><span class=\"pln\">dangerouslySetInnerHTML</span></code>?</h2>\n<p><code class=\" prettyprinted\" style=\"\"><span class=\"pln\">dangerouslySetInnerHTML</span></code>\n is a property that you can use on HTML elements in a React application \nto programmatically set their content. Instead of using a selector to \ngrab the HTML element, then setting its <code class=\" prettyprinted\" style=\"\"><span class=\"pln\">innerHTML</span></code>, you can use this property directly on the element.</p>\n<p>When <code class=\" prettyprinted\" style=\"\"><span class=\"pln\">dangerouslySetInnerHTML</span></code>\n is used, React also knows that the content of that specific element is \ndynamic, and, for the children of that node, it simply skips the \ncomparison against the virtual DOM to gain some extra performance.</p>\n<p>As the name of the property suggests, it can be dangerous to use \nbecause it makes your code vulnerable to cross-site scripting (XSS) \nattacks. This becomes an issue especially if you are fetching data from a\n third-party source or rendering content submitted by users.</p></article>","image_url":"https://blog.logrocket.com/wp-content/uploads/2021/07/using-dangerouslysetinnerHTML-react-application.png","meta_title":"New blog post","meta_description":"New blog post","author_name":"Akshay","author_bio":"Developer","status":"active","_method":"post", "category": "science-corner"}